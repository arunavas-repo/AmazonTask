Steps to Run:
-------------
do a mvn clean install from the project directory.
run java -jar target/solutions.jar <instance_type_file> <host_details_file>


Pseudo Code for the Solution:
-----------------------------
load file into object
	do validation and eliminate the corrupted ones
spawn three threads (M1, M2, M3) (each for an instance, if number of instance exceeds 10 then number of threads limit to 10)
	calculate filled host / empty host and most filled host for each instance
wait for the three threads to complete
merge the results and write to Statistics.txt.


Validations:
------------
vm state must be either 0 or 1
vm list should have exactly same as the count of vm mentioned in the host line -
instance should be of among the configured instances -
each line should conform the specified format - [HostId],[InstanceType],[NumberOfSlot],[0 .. N number of slots]


Assumptions:
------------
If an entry does not pass the validation skipping the particular entry instead of terminating entire process.
Instead of hardcoded, made the instance type configurable. If any new instance type needs to be added then just adding it to the input instanceType file will do the stuff.
If any instance does not have any value among the output criteria, it prints 0 as value.
Output criteria once again:
	1. Empty Hosts -> InstanceType=<number of hosts where all the slots are free i.e. 0>
	2. Full Hosts  -> InstanceType=<number of hosts where all the slots are utilized i.e. 1>
	3. Most Filled Hosts -> InstanceType=<Number of hosts which have the minimum available slots>,<The value of the minimum available slots>


Development Environment:
------------------------
OS:		Linux (Ubuntu 14.0.4)
IDE:		Eclipse
Language:	Java (openjdk 1.8.0_91)
Build Tool:	Apache Maven 3.2.5
Test Tool:	junit 4.12


Known Bugs:
-----------
N/A (Tried to cover all possible situations.)
